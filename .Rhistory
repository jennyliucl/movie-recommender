shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
setwd("/Users/liuchenli/Desktop/NCCU/2022-workshop/IMDB-project")
df = read.csv("IMDBdataset_withhex.csv")
unique(df[,61])
table(df[,61])
test = "#FBFBFB" #"#170F0B"
df[which(df[,61]==test | df[,62]==test | df[,63]==test),1]
if (test %in% df[,61]){print("y")}
if (test %in% df[,62]){print("y")}
if (test %in% df[,63]){print("y")}
colnames(df)
if (test %in% df[,61]){
which(df[,61]==test)
}
which(df[,61]==test)[1]
df[which(df[,61]==test)[1], 23:25]
if (test %in% df[,61]){
df[which(df[,61]==test)[1], 23:25]
}
install.packages("ColorNameR")
library(ColorNameR)
ciede2000(df[which(df[,61]==test)[1], 23:25], df[which(df[,61]==test)[2], 23:25])
?ciede2000
ciede2000(df[which(df[,61]==test)[1], 23:25], df[which(df[,61]==test)[2], 23:25])
ciede2000(c(1,2,3),c(1,2,3))
library(ColorNameR)
?ciede2000
ciede2000()
devtools::install_github("msanchez-beeckman/ColorNameR")
ciede2000(df[which(df[,61]==test)[1], 23:25], df[which(df[,61]==test)[2], 23:25])
library(ColorNameR)
help(ColorNameR)
ciede2000(c(1,2,3),c(1,2,3))
?colordiff
install.packages("colordiff")
?ciede2000
# ciede2000 function from ColorNameR package
ciede2000 <- function(lab_color1, lab_color2, k_L=1, k_C=1, k_H=1) {
L1 <- lab_color1[1]
a1 <- lab_color1[2]
b1 <- lab_color1[3]
L2 <- lab_color2[1]
a2 <- lab_color2[2]
b2 <- lab_color2[3]
C1 <- base::sqrt(a1^2 + b1^2)
C2 <- base::sqrt(a2^2 + b2^2)
C_bar <- (C1 + C2) / 2
G <- (1 - base::sqrt(C_bar^7 / (C_bar^7 + 25^7))) / 2
a1p <- (1 + G) * a1
a2p <- (1 + G) * a2
C1p <- base::sqrt(a1p^2 + b1^2)
C2p <- base::sqrt(a2p^2 + b2^2)
h1p <- base::atan2(b1, a1p) %% (2*base::pi)
h2p <- base::atan2(b2, a2p) %% (2*base::pi)
delta_Lp <- L2 - L1
delta_Cp <- C2p - C1p
delta_hp <- base::ifelse(C1p * C2p != 0,
base::ifelse(base::abs(h2p - h1p) <= base::pi,
h2p - h1p,
h2p - h1p + base::sign(h1p - h2p) * 2 * base::pi),
0)
delta_Hp <- 2 * base::sqrt(C1p * C2p) * base::sin(delta_hp / 2)
Lp_bar <- (L1 + L2) / 2
Cp_bar <- (C1p + C2p) / 2
hp_bar <- base::ifelse(C1p * C2p != 0,
base::ifelse(base::abs(h2p - h1p) <= base::pi,
(h1p + h2p) / 2,
-(h1p + h2p + base::sign(2 * base::pi - h1p - h2p) * 2 * base::pi) / 2),
h1p + h2p)
deg2rad <- base::pi / 180
rad2deg <- 1 / deg2rad
Tp <- (1 - 0.17 * base::cos(hp_bar - 30 * deg2rad)
+ 0.24 * base::cos(2 * hp_bar)
+ 0.32 * base::cos(3 * hp_bar + 6 * deg2rad)
- 0.20 * base::cos(4 * hp_bar - 63 * deg2rad))
delta_theta <- 30 * deg2rad * base::exp(- ((hp_bar * rad2deg - 275) / 25)^2)
R_C <- 2 * base::sqrt(Cp_bar^7 / (Cp_bar^7 + 25^7))
S_L <- 1 + ((0.015 * (Lp_bar - 50)^2) / base::sqrt(20 + (Lp_bar - 50)^2))
S_C <- 1 + 0.045 * Cp_bar
S_H <- 1 + 0.015 * Cp_bar * Tp
R_T <- - base::sin(2 * delta_theta) * R_C
term1 <- delta_Lp / (k_L * S_L)
term2 <- delta_Cp / (k_C * S_C)
term3 <- delta_Hp / (k_H * S_H)
term4 <- R_T * term2 * term3
base::sqrt(term1^2 + term2^2 + term3^2 + term4)
}
ciede2000(c(50,10,10),c(50,10,20))
ciede2000(c(50,10,10),c(50,10,50))
ciede2000(c(50,10,10),c(10,-50,-50))
# get the column of keyword
setwd("/Users/liuchenli/Desktop/Design/Shiny/IMDB")
# find hex
df = read.csv("IMDBdataset-utf8.csv")
test = "#210B33" #"#170F0B"
if (test %in% df[,61]){
j = 61
} else if (test %in% df[,62]){
j = 62
} else if (test %in% df[,63]){
j = 63
}
diff_1 = rep(NA,1000)
diff_2 = rep(NA,1000)
diff_3 = rep(NA,1000)
min_diff = rep(NA,1000)
for (i in 1:1000){
diff_1[i] = ciede2000(which(df[,j]==test)[1] %>% df[., 23:25] %>% unlist %>% as.vector,
df[i, 23:25] %>% unlist %>% as.vector)
diff_2[i] = ciede2000(which(df[,j]==test)[1] %>% df[., 23:25] %>% unlist %>% as.vector,
df[i, 26:28] %>% unlist %>% as.vector)
diff_3[i] = ciede2000(which(df[,j]==test)[1] %>% df[., 23:25] %>% unlist %>% as.vector,
df[i, 29:31] %>% unlist %>% as.vector)
min_diff[i] = min(diff_1[i],diff_2[i],diff_3[i])
}
df %>%
mutate(color_1_diff = diff_1,
color_2_diff = diff_2,
color_3_diff = diff_3,
min_color_diff = min_diff) %>%
arrange(min_color_diff) %>%
select(series_title, min_color_diff, dominant_color_file)
library(tidyverse)
diff_1 = rep(NA,1000)
diff_2 = rep(NA,1000)
diff_3 = rep(NA,1000)
min_diff = rep(NA,1000)
for (i in 1:1000){
diff_1[i] = ciede2000(which(df[,j]==test)[1] %>% df[., 23:25] %>% unlist %>% as.vector,
df[i, 23:25] %>% unlist %>% as.vector)
diff_2[i] = ciede2000(which(df[,j]==test)[1] %>% df[., 23:25] %>% unlist %>% as.vector,
df[i, 26:28] %>% unlist %>% as.vector)
diff_3[i] = ciede2000(which(df[,j]==test)[1] %>% df[., 23:25] %>% unlist %>% as.vector,
df[i, 29:31] %>% unlist %>% as.vector)
min_diff[i] = min(diff_1[i],diff_2[i],diff_3[i])
}
df %>%
mutate(color_1_diff = diff_1,
color_2_diff = diff_2,
color_3_diff = diff_3,
min_color_diff = min_diff) %>%
arrange(min_color_diff) %>%
select(series_title, min_color_diff, dominant_color_file)
df %>%
mutate(color_1_diff = diff_1,
color_2_diff = diff_2,
color_3_diff = diff_3,
min_color_diff = min_diff) %>%
arrange(min_color_diff) %>%
select(series_title, min_color_diff, dominant_color_file)[1:3]
df %>%
mutate(color_1_diff = diff_1,
color_2_diff = diff_2,
color_3_diff = diff_3,
min_color_diff = min_diff) %>%
arrange(min_color_diff) %>%
select(series_title, min_color_diff, dominant_color_file)[1:3,]
ppt = df %>%
mutate(color_1_diff = diff_1,
color_2_diff = diff_2,
color_3_diff = diff_3,
min_color_diff = min_diff) %>%
arrange(min_color_diff) %>%
select(series_title, min_color_diff, dominant_color_file)
View(ppt)
ppt = df %>%
mutate(color_1_diff = diff_1,
color_2_diff = diff_2,
color_3_diff = diff_3,
min_color_diff = min_diff) %>%
arrange(min_color_diff) %>%
select(series_title, min_color_diff, dominant_color_file, color_1_diff, color_2_diff, color_3_diff)
ppt = df %>%
mutate(color_1_diff = diff_1,
color_2_diff = diff_2,
color_3_diff = diff_3,
min_color_diff = min_diff) %>%
arrange(min_color_diff) %>%
select(series_title, min_color_diff, dominant_color_file, color_1_diff, color_2_diff, color_3_diff, hex1)
ppt = df %>%
mutate(color_1_diff = diff_1,
color_2_diff = diff_2,
color_3_diff = diff_3,
min_color_diff = min_diff) %>%
arrange(min_color_diff) %>%
select(series_title, min_color_diff, dominant_color_file, color_1_diff, color_2_diff, color_3_diff, hex2)
test = "#B37DA9" #"#170F0B"
if (test %in% df[,61]){
j = 61
} else if (test %in% df[,62]){
j = 62
} else if (test %in% df[,63]){
j = 63
}
diff_1 = rep(NA,1000)
diff_2 = rep(NA,1000)
diff_3 = rep(NA,1000)
min_diff = rep(NA,1000)
for (i in 1:1000){
diff_1[i] = ciede2000(which(df[,j]==test)[1] %>% df[., 23:25] %>% unlist %>% as.vector,
df[i, 23:25] %>% unlist %>% as.vector)
diff_2[i] = ciede2000(which(df[,j]==test)[1] %>% df[., 23:25] %>% unlist %>% as.vector,
df[i, 26:28] %>% unlist %>% as.vector)
diff_3[i] = ciede2000(which(df[,j]==test)[1] %>% df[., 23:25] %>% unlist %>% as.vector,
df[i, 29:31] %>% unlist %>% as.vector)
min_diff[i] = min(diff_1[i],diff_2[i],diff_3[i])
}
ppt = df %>%
mutate(color_1_diff = diff_1,
color_2_diff = diff_2,
color_3_diff = diff_3,
min_color_diff = min_diff) %>%
arrange(min_color_diff) %>%
select(series_title, min_color_diff, dominant_color_file, color_1_diff, color_2_diff, color_3_diff, hex2)
if (test %in% df[,61]){
j = 61
} else if (test %in% df[,62]){
j = 62
} else if (test %in% df[,63]){
j = 63
}
diff_1 = rep(NA,1000)
diff_2 = rep(NA,1000)
diff_3 = rep(NA,1000)
min_diff = rep(NA,1000)
for (i in 1:1000){
diff_1[i] = ciede2000(which(df[,j]==test)[1] %>% df[., 23:25] %>% unlist %>% as.vector,
df[i, 23:25] %>% unlist %>% as.vector)
diff_2[i] = ciede2000(which(df[,j]==test)[1] %>% df[., 23:25] %>% unlist %>% as.vector,
df[i, 26:28] %>% unlist %>% as.vector)
diff_3[i] = ciede2000(which(df[,j]==test)[1] %>% df[., 23:25] %>% unlist %>% as.vector,
df[i, 29:31] %>% unlist %>% as.vector)
min_diff[i] = min(diff_1[i],diff_2[i],diff_3[i])
}
ppt = df %>%
mutate(color_1_diff = diff_1,
color_2_diff = diff_2,
color_3_diff = diff_3,
min_color_diff = min_diff) %>%
arrange(min_color_diff) %>%
select(series_title, min_color_diff, dominant_color_file, color_1_diff, color_2_diff, color_3_diff, hex2)
View(ppt)
ppt = df %>%
mutate(color_1_diff = diff_1,
color_2_diff = diff_2,
color_3_diff = diff_3,
min_color_diff = min_diff) %>%
arrange(min_color_diff) %>%
select(series_title, min_color_diff, dominant_color_file, color_1_diff, color_2_diff, color_3_diff, hex1, hex2)
test = "#B37DA9" #"#170F0B"
if (test %in% df[,61]){
j = 61
} else if (test %in% df[,62]){
j = 62
} else if (test %in% df[,63]){
j = 63
}
diff_1 = rep(NA,1000)
diff_2 = rep(NA,1000)
diff_3 = rep(NA,1000)
min_diff = rep(NA,1000)
for (i in 1:1000){
diff_1[i] = ciede2000(which(df[,j]==test)[1] %>% df[., 23:25] %>% unlist %>% as.vector,
df[i, 23:25] %>% unlist %>% as.vector)
diff_2[i] = ciede2000(which(df[,j]==test)[1] %>% df[., 23:25] %>% unlist %>% as.vector,
df[i, 26:28] %>% unlist %>% as.vector)
diff_3[i] = ciede2000(which(df[,j]==test)[1] %>% df[., 23:25] %>% unlist %>% as.vector,
df[i, 29:31] %>% unlist %>% as.vector)
min_diff[i] = min(diff_1[i],diff_2[i],diff_3[i])
}
ppt = df %>%
mutate(color_1_diff = diff_1,
color_2_diff = diff_2,
color_3_diff = diff_3,
min_color_diff = min_diff) %>%
arrange(min_color_diff) %>%
select(series_title, min_color_diff, dominant_color_file, color_1_diff, color_2_diff, color_3_diff, hex1, hex2)
View(ppt)
shiny::runApp()
runApp()
runApp()
shiny::runApp()
